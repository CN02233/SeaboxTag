package com.evergrande.hdmp.usertags.action.sms.impl;

import com.evergrande.hdmp.usertags.action.sms.SmsResp;
import com.evergrande.sms.SMSService;
import com.evergrande.sms.model.request.SmsRequest;
import com.evergrande.sms.model.request.SmsResponse;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.annotation.Profile;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;

/**
 * @author Changhua, Wu
 *         Created on: 2/18/16,3:32 PM
 */

public class MockSMSService implements SMSService {

    private static final Logger logger = LoggerFactory.getLogger(MockSMSService.class);

    @Override
    public SmsResponse sendMessage(SmsRequest request) {

        if(logger.isTraceEnabled()) {
            logger.trace("------------------ API called, MockSMSService::sendMessage(), request={}", request);
        }

        SmsResponse response = new SmsResponse();
        Map<String, Object>  bodyMap = new HashMap<>();
        bodyMap.put("return_code", "0000");
        response.setResponseBody( bodyMap );

        return response;
    }

    @Override
    public SmsResponse report(SmsRequest request) {

        if(logger.isTraceEnabled()){
            logger.trace("------------------ API called, MockSMSService::report(), request={}", request);
        }

        SmsResponse response = new SmsResponse();
        Map<String, Object>  bodyMap = new HashMap<>();
        bodyMap.put("return_code", "0000");
        response.setResponseBody( bodyMap );

        return response;
    }

    @Override
    public SmsResponse reply(SmsRequest request) {

        if(logger.isTraceEnabled()){
            logger.trace("------------------ API called, MockSMSService::reply(), request={}", request);
        }

        SmsResponse response = new SmsResponse();
        Map<String, Object>  bodyMap = new HashMap<>();
        bodyMap.put("return_code", "0000");
        response.setResponseBody( bodyMap );

        return response;
    }

    @Override
    public SmsResponse getModelContentByNo(SmsRequest request) {

        if(logger.isTraceEnabled()) {
            logger.trace("------------------ API called, MockSMSService::getModelContentByNo(), request={}", request);
        }

        SmsResponse response = new SmsResponse();
        Map<String, Object>  bodyMap = new HashMap<>();
        bodyMap.put("model_content", "This is a  Test Message with {#######} ,  and {########} ");
        response.setResponseBody( bodyMap );

        return response;
    }

}
