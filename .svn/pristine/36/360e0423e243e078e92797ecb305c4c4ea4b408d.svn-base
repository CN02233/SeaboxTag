package com.evergrande.hdmp.usertags.mybatis.dao;

import com.evergrande.hdmp.usertags.entity.TagInfo;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.util.List;

/**
 * @author Changhua, Wu
 *         Created on: 1/23/16,11:45 AM
 */

public class TagInfoDaoTest {

    private static final Logger logger = LoggerFactory.getLogger(TagInfoDaoTest.class);

    private static SqlSessionFactory sqlSessionFactory;


    @BeforeClass
    public static void init() throws IOException {

        sqlSessionFactory = MockDbUtils.initDB();

    }

    @Test
    public void testListAll() {

        SqlSession session = sqlSessionFactory.openSession();

        try {

            TagInfoDao tagInfoDao = session.getMapper(TagInfoDao.class);

            List<TagInfo> tagInfos = tagInfoDao.listAll();

            logger.debug("total available tags: {}", tagInfos.size());

            Assert.assertTrue( tagInfos.size()>0 );

            for(TagInfo tagInfo: tagInfos) {
                logger.debug("tag: id={},  name={},  desc={}", tagInfo.getTag_id(), tagInfo.getTag_nm(), tagInfo.getTag_desc());
                Assert.assertNotNull( tagInfo.getTag_nm() );
            }

        } finally {
            session.close();
        }

    }

    @Test
    public void testGetById() {

        SqlSession session = sqlSessionFactory.openSession();

        try {

            TagInfoDao tagInfoDao = session.getMapper(TagInfoDao.class);

            TagInfo tagInfo = tagInfoDao.getById(1);

            logger.debug("tag: id={},  name={},  desc={}", tagInfo.getTag_id(), tagInfo.getTag_nm(), tagInfo.getTag_desc());

            Assert.assertNotNull( tagInfo.getTag_nm() );

        } finally {
            session.close();
        }

    }


    @Test
    public void testFindAllByName() {

        SqlSession session = sqlSessionFactory.openSession();

        try {

            TagInfoDao tagInfoDao = session.getMapper(TagInfoDao.class);

            String nameLike = "%ä¸”%";
            List<TagInfo>  tagInfos = tagInfoDao.findAllByName( nameLike );

            logger.debug("found tags which like {} :  {}", nameLike,  tagInfos.size());

            Assert.assertTrue(tagInfos.size() > 0);

            for(TagInfo tagInfo: tagInfos) {
                logger.debug("tag: id={},  name={},  desc={}", tagInfo.getTag_id(), tagInfo.getTag_nm(), tagInfo.getTag_desc());
                Assert.assertNotNull( tagInfo.getTag_nm() );
            }

        } finally {
            session.close();
        }

    }

}
