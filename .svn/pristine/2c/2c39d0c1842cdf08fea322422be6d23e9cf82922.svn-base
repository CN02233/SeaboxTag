package com.evergrande.hdmp.usertags.mybatis.dao;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.Reader;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 * @author Changhua, Wu
 *         Created on: 1/23/16,4:26 PM
 */
public class MockDbUtils {


    private static final Logger logger = LoggerFactory.getLogger(MockDbUtils.class);

    public static SqlSessionFactory initDB() throws IOException {

        Reader reader = Resources.getResourceAsReader("usertags/mybatic-mysql-config.xml");
        SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);

        SqlSession session = sqlSessionFactory.openSession();


        try {

            Connection conn = session.getConnection();
            final String TAGS_TEST_MOCKDB_DIR = "usertags/sample-csv/";

            Reader sqlIn = Resources.getResourceAsReader( TAGS_TEST_MOCKDB_DIR + "init-tag-test.sql");
            BufferedReader buf = new BufferedReader(sqlIn);

            String line;
            StringBuffer sb = new StringBuffer();
            while ( (line = buf.readLine()) != null) {
                String l = line.replaceAll("__TAGS_TEST_MOCKDB_DIR__", "target/test-classes/" + TAGS_TEST_MOCKDB_DIR );
                sb.append( l );
                sb.append("\n");
            }
            String sqlText = sb.toString();
            logger.trace("whole DB init sql: {}", sqlText);
            PreparedStatement preparedStatement = conn.prepareStatement(sqlText);
            preparedStatement.addBatch();
            preparedStatement.execute();


        } catch (SQLException e) {
            logger.error("can not init create DB, error: ", e);
        } finally {
            session.close();
        }

        return sqlSessionFactory;
    }

}
